Learning how to initialise a window firstly 

JULY 20th 
1. By creating a screen
2. Then using while loop and setting an algorithm to help close the event
3. Creating the title and icon of our window -- 
Using pygame.display.set_caption("Using our specified title")
 Use the image module to get the image -- Icon == pyagame.image.load("Name of image")
 pygame.display.set_icon(icon)
4. Changing the color on the screen -- 
 setting RGB values in the screen.fill((R,G,B)) values
 and then to commit all the changes we use 
 pygame.display.update(){Telling pygame to edit the display}

5. Adding images to python --
setting the image to using pygame.image.load("Name of Image")
Then to show the image on the screen we will set some coordinates
and simultaneouly use the blit function to draw something on the screen

screen.blit(image,(x_coordinate,y_coordinate))

NOTE :: If u are changing the color of the screen and use fill then print the image after the fill function
and before the displat.update

6. Movement of object inside the game window
we bassically add or subtract the x,y values of the x,y co ordinate 
and make the object Move

7. If keystroke is pressed -- right,left
pygame.KEYDOWN -- checks for any keystroke on the computer
pygame.K_LEFT -- left arrow
pygame.K_RIGHT -- right arrow

pygame.KEYUP -- checks for any released  keystroke on the computer

8. Adding boundaries to our game--
We bassically add a boundary by writing an if condition 
we check that the X cordinate closes to 0 then it will automatically be changed to 0 
and then the Y cordinate similarly to the boundary size that we have agreed to have

9. Adding an alien image now similar process as above 
10.Movement of the enemy

10. Adding a background image -- 
Similar functions to the one already posted

11.Adding a bullet -- 
a. adding a bullet image 
b. making it move using movement commands

12. Adding multiple bullets

13. Adding the collision concept 
a.We calulate the distance between two points
using  D = sqrt((x_2 - x_1)^2 + (y_2 - y_1)^2)
We find the distance between the enemy and the bullet
Then after we check for collision we add a scoring medium and then respawn the enemy

14. Creating multiple enemies 
Adding an empty list with the same name as the pyagme.imgae.load
and then using for loop to add more enemies

15. Displaying score

16. GAME OVER --
Just as soon as the enemy spaceships come closer to the player the text game over will be reflected over the screen
